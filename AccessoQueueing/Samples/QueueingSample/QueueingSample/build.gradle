plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
}

apply plugin: 'kotlin-parcelize'

android {
    namespace 'com.accesso.queueingsample'
    compileSdk Versions.compileSdkVersion

    defaultConfig {
        applicationId "com.accesso.queueingsample"
        minSdk Versions.minSdkVersion
        targetSdk Versions.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildFeatures {
        compose true
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion = Versions.kotlinCompilerExtensionVersion
    }
}

dependencies {
    implementation "androidx.core:core-ktx:${Versions.androidxCoreKtx}"
    implementation "com.google.android.material:material:${Versions.googleAndroidMaterial}"
    implementation("androidx.security:security-crypto:${Versions.androidxSecurityCrypto}")

    // Networking
    api("com.squareup.retrofit2:retrofit:${Versions.retrofitVersion}")
    api("com.squareup.retrofit2:converter-gson:${Versions.retrofitVersion}")
    api("com.squareup.retrofit2:adapter-rxjava:${Versions.retrofitVersion}")
    implementation("com.squareup.moshi:moshi:${Versions.moshiVersion}")
    implementation("com.squareup.moshi:moshi-adapters:${Versions.moshiVersion}")
    implementation("com.squareup.retrofit2:converter-moshi:${Versions.moshiConverter}")
    api("com.github.bumptech.glide:glide:${Versions.glide}")
    annotationProcessor("com.github.bumptech.glide:compiler:${Versions.glideCompiler}")
    implementation "com.github.bumptech.glide:compose:${Versions.glideCompose}"

    // Jetpack Compose libs
    implementation "androidx.activity:activity-compose:${Versions.composeActivity}"
    implementation "androidx.compose.ui:ui:${Versions.composeUI}"
    implementation "androidx.compose.ui:ui-tooling-preview:${Versions.composeUI}"
    implementation "androidx.compose.material:material:${Versions.composeMaterial}"
    implementation "androidx.compose.material3:material3:${Versions.composeMaterial3}"
    implementation "androidx.compose.runtime:runtime-livedata:${Versions.composeRuntimeLivedata}"
    implementation "androidx.navigation:navigation-compose:${Versions.composeNavigation}"
    implementation "io.coil-kt:coil-compose:${Versions.composeCoil}"

    implementation(project(":AccessoQueueing"))
    implementation(project(":AccessoCore"))

}
